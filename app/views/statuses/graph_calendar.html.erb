<script src="/js/d3.js"></script>
<script src="/js/libs/jquery-1.7.1.min.js"></script>
<h2>All barrier statuses since <%= @oldest_status.date.strftime("%m/%Y") %></h2>

<section class="north">
  <h2>North</h2>
  <div id="chart_north"></div>
</section>

<section class="south">
  <h2>South</h2>
  <div id="chart_south"></div>
</section>

<script>

var data_north = {
 "name": "status north",
 "children": [
  {
   "name": "yes",
   "children": [
  <% (@nb_statuses_north_no - 1).times do %>
    {"size": 1},
  <% end %>
    {"size": 1}
   ]
  },
  {
   "name": "no",
   "children": [
  <% (@nb_statuses_north_yes - 1).times do %>
    {"size": 1},
  <% end %>
    {"size": 1}
   ]
  }
 ]
};

var data_south = {
 "name": "status south",
 "children": [
  {
   "name": "yes",
   "children": [
  <% (@nb_statuses_south_no - 1).times do %>
    {"size": 1},
  <% end %>
    {"size": 1}
   ]
  },
  {
   "name": "no",
   "children": [
  <% (@nb_statuses_south_yes - 1).times do %>
    {"size": 1},
  <% end %>
    {"size": 1}
   ]
  }
 ]
};

function render() {
  $("#chart_north, #chart_south").empty();
  
  var w = $('section.north').width(),
      h = w,
      r = Math.min(w, h) / 2,
      color = d3.scale.category20c(),

      vis_north = d3.select("#chart_north").append("svg")
        .attr("width", w)
        .attr("height", h)
        .append("g")
        .attr("transform", "translate(" + w / 2 + "," + h / 2 + ")"),

      vis_south = d3.select("#chart_south").append("svg")
        .attr("width", w)
        .attr("height", h)
        .append("g")
        .attr("transform", "translate(" + w / 2 + "," + h / 2 + ")"),

      partition = d3.layout.partition()
        .sort(null)
        .size([2 * Math.PI, r * r])
        .value(function(d) { return 1; }),

      arc = d3.svg.arc()
        .startAngle(function(d) { return d.x; })
        .endAngle(function(d) { return d.x + d.dx; })
        .innerRadius(function(d) { return Math.sqrt(d.y); })
        .outerRadius(function(d) { return Math.sqrt(d.y + d.dy); }),

      path_north = vis_north.data([data_north]).selectAll("path")
        .data(partition.nodes)
        .enter().append("path")
        .attr("display", function(d) { return d.depth ? null : "none"; }) // hide inner ring
        .attr("d", arc)
        .attr("fill-rule", "evenodd")
        .style("stroke", "#fff")
        .style("fill", function(d) {
          var col = (d.children ? d : d.parent).name;
          return col == "yes" ? '#71bf44' : '#ed1c24';
        })
        .each(stash);

      path_south = vis_south.data([data_south]).selectAll("path")
        .data(partition.nodes)
        .enter().append("path")
        .attr("display", function(d) { return d.depth ? null : "none"; }) // hide inner ring
        .attr("d", arc)
        .attr("fill-rule", "evenodd")
        .style("stroke", "#fff")
        .style("fill", function(d) {
          var col = (d.children ? d : d.parent).name;
          return col == "yes" ? '#71bf44' : '#ed1c24';
        })
        .each(stash);
  }

// Stash the old values for transition.
function stash(d) {
  d.x0 = d.x;
  d.dx0 = d.dx;
}

$(window).resize(render);
$(render);
</script>